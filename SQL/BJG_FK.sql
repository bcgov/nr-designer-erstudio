  CREATE OR REPLACE FORCE VIEW BJG_FK" ("WANAME", "APPNAME", "FKNAME", "PARENT", "PHRASE", "INVERSE_PHRASE", "CHILD") AS
  (SELECT distinct
  rel1.waname,
  rel1.appname,
  con.NAME   AS fkname,
  REl2.ENTNAME AS PARENT,
  REL2.PHRASE ,
  REL1.PHRASE AS INVERSE_PHRASE,
  REL1.ENTNAME as CHILD
FROM
(
SELECT
  wa.name as waname,
  app.name as appname,
  TAB.NAME AS tabname,
  ENT.NAME         AS entname,
  RELEND.NAME AS PHRASE,
  RELEND.IRID as RELEND_IRID,
  RELEND.TO_ENTITY_REF,
  RELEND.FROM_ENTITY_REF,
  RELEND.OTHER_RELATIONSHIP_END_REF,
  TAB.TABLE_TYPE,
  TAB.ORACLE_OBJECT_TYPE_REF,
  TAB.DISPLAY_TITLE,
  ENT.SHORT_NAME   AS entshortname,
  ENT.IVID        as entivid,
  ent.irid        as entirid,
  TAB.IVID         AS tabivid,
  TAB.IRID         AS tabIRID
FROM I$SDD_WORKAREAS WA
LEFT JOIN I$SDD_WA_CONTEXT WAC
ON WA.IRID = WAC.WORKAREA_IRID
LEFT JOIN I$SDD_OBJECT_VERSIONS OV
ON WAC.OBJECT_IVID = OV.IVID
INNER JOIN
  (SELECT e.*,
    MAX(e.IVID) Over (Partition BY e.IRID) AS max_ivid
  FROM i$sdd_folder_members e
  ) FM
ON FM.MEMBER_OBJECT = OV.IRID
AND FM.max_ivid     = FM.IVID
INNER JOIN i$sdd_folders APP
ON FM.FOLDER_REFERENCE = APP.IRID
AND FM.PARENT_IVID     = APP.IVID
INNER JOIN I$SDD_TAB TAB
ON FM.MEMBER_OBJECT = TAB.IRID
AND OV.IVID         = TAB.IVID
INNER JOIN I$SDD_TABENT
ON TAB.IRID  = I$SDD_TABENT.TABLE_REF
AND TAB.IVID = I$SDD_TABENT.PARENT_IVID
INNER JOIN I$SDD_ENT ENT
ON I$SDD_TABENT.ENTITY_REF = ENT.IRID
INNER JOIN I$SDD_RELEND RELEND
ON ENT.IRID                        = RELEND.FROM_ENTITY_REF
AND ENT.IVID                       = RELEND.PARENT_IVID
WHERE
 OV.WASTEBASKET        = 'N'
) REL1

INNER JOIN
(
SELECT
  ENT.NAME         AS entname,
  RELEND.NAME AS PHRASE,
  RELEND.IRID as RELEND_IRID,
  RELEND.TO_ENTITY_REF,
  RELEND.OTHER_RELATIONSHIP_END_REF,
  ENT.SHORT_NAME   AS entshortname,
  ENT.IVID        as entivid,
  ent.irid        as entirid,
  tab.irid        as tabirid
FROM I$SDD_WORKAREAS WA
LEFT JOIN I$SDD_WA_CONTEXT WAC
ON WA.IRID = WAC.WORKAREA_IRID
LEFT JOIN I$SDD_OBJECT_VERSIONS OV
ON WAC.OBJECT_IVID = OV.IVID
INNER JOIN
  (SELECT e.*,
    MAX(e.IVID) Over (Partition BY e.IRID) AS max_ivid
  FROM i$sdd_folder_members e
  ) FM
ON FM.MEMBER_OBJECT = OV.IRID
AND FM.max_ivid     = FM.IVID
INNER JOIN i$sdd_folders APP
ON FM.FOLDER_REFERENCE = APP.IRID
AND FM.PARENT_IVID     = APP.IVID
INNER JOIN I$SDD_ENT ENT
 ON OV.IVID         = ENT.IVID
inner join I$SDD_TABENT TABent
 on ent.IRID = tabent.entity_ref
inner join I$SDD_TAB tab
on tabent.table_ref = tab.irid
INNER JOIN I$SDD_RELEND RELEND
ON ENT.IRID                        = RELEND.FROM_ENTITY_REF
AND ENT.IVID                       = RELEND.PARENT_IVID
WHERE
 OV.WASTEBASKET        = 'N'

) REL2
ON
REL1.RELEND_IRID = REL2.OTHER_RELATIONSHIP_END_REF
AND REL2.RELEND_IRID = REL1.OTHER_RELATIONSHIP_END_REF
AND REL2.TO_ENTITY_REF = rel1.entirid
AND REL1.TO_ENTITY_REF = rel2.entirid
INNER JOIN I$SDD_OCO con
ON REL1.TABIRID  = con.TABLE_REF
AND REL1.TABIVID = con.PARENT_IVID
and con.foreign_table_ref = rel2.tabirid
and con.table_ref = rel1.tabirid
and (con.relationship_end_ref is Null or con.relationship_end_ref = rel1.relend_irid)
where
CON.CONSTRAINT_TYPE = 'FOREIGN'
);



  GRANT SELECT ON "CASEADMIN"."BJG_FK" TO "PUBLIC";